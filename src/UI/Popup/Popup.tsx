"use client";
/* eslint-disable react-hooks/exhaustive-deps */
import { useEffect } from "react";

import { useErrorState } from "@/stores/errorState";
import { useLoader } from "@/stores/loaderStore";
import { useOpenPopup } from "@/stores/popupState";

import dictionary from "@/context/buttonLabels.json";

import ErrorPopupMessage from "../ErrorPopupMessage/ErrorPopupMessage";
import SimpleButton from "../SimpleButton/SimpleButton";

import "./Popup.scss";

const Popup: React.FC = () => {
    //  here should be some hook to switch between languages
    const lang = "ru";
    // get labels from dictionary
    const buttonLabels = dictionary[lang];
    // constructing popup using other components
    // popupType: inform, form, submit
    // formComponent: some custom form
    // textComponent: text component to show in popup
    // size: screen size generated by useResize in parent component
    // setIsOpen: action from store
    const { popupType, formComponent, textComponent, size, setIsOpen } = useOpenPopup();

    const { isLoading } = useLoader();
    const { message, code, cleanError } = useErrorState();
    const handleClosePopup = () => {
        if (isLoading) {
            return;
        }
        setIsOpen(false, null);
        cleanError();
    };
    // esc listener to close popup
    useEffect(() => {
        function onKeyDown(evt: KeyboardEvent) {
            if (evt.key === "Escape" && !isLoading) {
                handleClosePopup();
            }
        }
        document.addEventListener("keydown", onKeyDown);
        return () => {
            document.removeEventListener("keydown", onKeyDown);
        };
    }, [isLoading]);

    return (
        // popup shadow with closeOnClick functionality
        <div className="popup__shadow" onClick={handleClosePopup}>
            <section className={`popup ${size}`} onClick={(e) => e.stopPropagation()}>
                <button
                    type="button"
                    className="popup__close"
                    aria-label="Close popup"
                    onClick={handleClosePopup}
                />
                <div className="popup__children">
                    {/* Creating popup with information (success/errors) */}
                    {message ? (
                        <ErrorPopupMessage
                            // message="Произошла ошибка! Проверьте данные или обратитесь к администратору."
                            message={message}
                        />
                    ) : (
                        <>
                            {/* Creating popup with information */}
                            {popupType === "inform" && (
                                <>
                                    {textComponent}
                                    <SimpleButton
                                        type="button"
                                        size="small-size"
                                        text={buttonLabels.ok}
                                        onClick={handleClosePopup}
                                    />
                                </>
                            )}

                            {/* Creating popup with form */}
                            {popupType === "form" && formComponent}

                            {/* Creating popup to get user submission */}
                            {popupType === "submit" && (
                                <>
                                    {textComponent}
                                    <SimpleButton
                                        type="button"
                                        size="small-size"
                                        text={buttonLabels.submit}
                                        onClick={handleClosePopup}
                                    />
                                    <SimpleButton
                                        type="button"
                                        size="small-size"
                                        text={buttonLabels.cancel}
                                        onClick={handleClosePopup}
                                    />
                                </>
                            )}
                        </>
                    )}
                </div>
            </section>
        </div>
    );
};
export default Popup;
